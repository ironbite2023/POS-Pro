# Email Configuration Guide

**Date**: January 6, 2025  
**Status**: ‚úÖ Configured for Development & Production

---

## üìã Overview

POS Pro uses email verification for user signups. This guide covers:
- Development mode (auto-confirm)
- Production mode (email verification required)
- Manual email confirmation
- Custom SMTP setup

---

## üîß Current Configuration

### **Development Mode** (Auto-Confirm)

```typescript
// src/app/api/auth/signup/route.ts
const isDevelopment = process.env.NODE_ENV === 'development';

email_confirm: isDevelopment, // true in dev, false in production
```

**Behavior**:
- ‚úÖ **Development**: Emails auto-confirmed, users can log in immediately
- ‚è∏Ô∏è **Production**: Emails require verification before login

**Why?**
- No SMTP configuration needed for development
- Faster testing and iteration
- Production security maintained

---

## üöÄ Development Setup

### **Option 1: Auto-Confirm (Current Setup - Recommended)**

Already configured! New signups are automatically confirmed.

**Test it:**
```bash
1. Go to: http://localhost:3000/auth/signup
2. Fill out the form
3. Submit
4. See: "Account created successfully! You can now log in."
5. Login immediately at: http://localhost:3000/auth/login
```

### **Option 2: Manual Confirmation (If Needed)**

If you need to manually confirm an email:

**Using Supabase MCP (Automated):**
```bash
# I already did this for: a.elbonnn2000@gmail.com
# Status: ‚úÖ Confirmed
```

**Using PowerShell Script:**
```powershell
.\scripts\confirm-email.ps1
# Enter email when prompted
```

**Using SQL Editor:**
```sql
-- Go to: https://supabase.com/dashboard/project/axlhezpjvyecntzsqczk/editor

UPDATE auth.users 
SET email_confirmed_at = NOW(),
    updated_at = NOW()
WHERE email = 'user@example.com';
```

---

## üåê Production Setup

### **Email Verification Flow**

In production (`NODE_ENV=production`), users must verify their email:

```
1. User signs up
   ‚Üì
2. Account created with email_confirm = false
   ‚Üì
3. Supabase sends verification email
   ‚Üì
4. User clicks verification link
   ‚Üì
5. Email confirmed
   ‚Üì
6. User can log in
```

### **Configure Email Templates**

1. **Go to Supabase Dashboard**
   ```
   https://supabase.com/dashboard/project/axlhezpjvyecntzsqczk/settings/auth
   ```

2. **Navigate to**: Authentication ‚Üí Email Templates

3. **Customize "Confirm signup" template**:

```html
<h2>Welcome to POS Pro!</h2>

<p>Thanks for signing up. Follow this link to confirm your email:</p>

<p><a href="{{ .ConfirmationURL }}">Confirm your email</a></p>

<p>Or copy and paste this URL into your browser:</p>
<p>{{ .ConfirmationURL }}</p>

<p>If you didn't request this, you can safely ignore this email.</p>

<p>Thanks,<br>The POS Pro Team</p>
```

4. **Configure Sender Details**:
   - From Email: `noreply@yourcompany.com`
   - From Name: `POS Pro`

---

## üìß Custom SMTP Configuration (Production)

### **Why Custom SMTP?**

Supabase's default email service:
- ‚úÖ Free tier: Limited emails per hour
- ‚ùå May go to spam
- ‚ùå No custom branding
- ‚ùå Rate limited

**Custom SMTP provides**:
- ‚úÖ Better deliverability
- ‚úÖ Custom branding
- ‚úÖ Higher limits
- ‚úÖ Professional appearance

### **Recommended Providers**

| Provider | Cost | Emails/Month | Setup Time |
|----------|------|--------------|------------|
| **SendGrid** | Free tier: 100/day | 3,000 | 15 min |
| **Mailgun** | $15/mo | 1,000 | 10 min |
| **AWS SES** | $0.10/1000 | Unlimited | 30 min |
| **Postmark** | $15/mo | 10,000 | 10 min |

### **Setup Instructions (SendGrid Example)**

1. **Create SendGrid Account**
   ```
   https://sendgrid.com/
   ```

2. **Get API Key**
   - Settings ‚Üí API Keys ‚Üí Create API Key
   - Copy the key (starts with `SG.`)

3. **Configure in Supabase**
   ```
   Dashboard ‚Üí Project Settings ‚Üí Authentication ‚Üí SMTP Settings
   
   Host: smtp.sendgrid.net
   Port: 587
   Username: apikey
   Password: [Your SendGrid API Key]
   From Email: noreply@yourcompany.com
   From Name: POS Pro
   ```

4. **Verify Domain** (Recommended)
   - Add SPF/DKIM records to your domain
   - Improves deliverability
   - Prevents emails going to spam

5. **Test Email Delivery**
   ```bash
   # Sign up with a test email
   # Check inbox/spam folder
   ```

---

## üß™ Testing Email Verification

### **Development Testing**

```bash
# Test auto-confirm
1. npm run dev
2. Sign up at: http://localhost:3000/auth/signup
3. Should see: "You can now log in"
4. Login immediately (no email needed)
```

### **Production Testing**

```bash
# Test email flow
1. Set NODE_ENV=production
2. Configure custom SMTP
3. Sign up with real email
4. Check email inbox
5. Click verification link
6. Should redirect to app
7. Login with verified account
```

### **Test Email Services**

Use these for testing without spamming real users:

- **Mailtrap**: https://mailtrap.io/ (Email testing)
- **MailHog**: https://github.com/mailhog/MailHog (Local SMTP)
- **Ethereal**: https://ethereal.email/ (Fake SMTP)

---

## üõ†Ô∏è Troubleshooting

### **Issue: "Email not confirmed" Error**

**Symptoms**:
```
AuthApiError: Email not confirmed
```

**Solutions**:

1. **Development**: Should auto-confirm (check `NODE_ENV`)
2. **Production**: User needs to click verification link
3. **Manual fix**: Run confirm-email script
4. **Check spam folder**: Email might be there

### **Issue: Email Not Received**

**Checklist**:

- [ ] Check spam/junk folder
- [ ] Verify SMTP settings in Supabase
- [ ] Check SendGrid/provider dashboard for errors
- [ ] Verify email domain is not blacklisted
- [ ] Check rate limits (free tier restrictions)
- [ ] Test with different email provider

**Debug Steps**:

```bash
1. Check Supabase logs:
   Dashboard ‚Üí Logs ‚Üí Auth Logs

2. Check SMTP provider logs:
   SendGrid ‚Üí Activity Feed

3. Test SMTP connection:
   Use tools like: https://www.smtper.net/
```

### **Issue: Verification Link Expired**

**Solution**:
```sql
-- Resend verification email (requires custom implementation)
-- OR manually confirm:

UPDATE auth.users 
SET email_confirmed_at = NOW()
WHERE email = 'user@example.com';
```

---

## üìä Monitoring Email Delivery

### **Key Metrics**

1. **Email Delivery Rate**
   - Target: > 99%
   - Alert if: < 95%

2. **Email Open Rate**
   - Target: > 20%
   - Indicates deliverability

3. **Verification Rate**
   - Target: > 80%
   - Users clicking confirmation link

4. **Time to Verify**
   - Target: < 1 hour
   - Track user behavior

### **Setup Monitoring**

```typescript
// Track email verification events
console.log('[Email] Verification sent', {
  userId,
  email,
  timestamp: new Date().toISOString(),
});

// Track verification success
console.log('[Email] Verification confirmed', {
  userId,
  email,
  duration: verificationTime,
  timestamp: new Date().toISOString(),
});
```

---

## üîê Security Best Practices

### **Email Security**

1. ‚úÖ **Use HTTPS** for verification links
2. ‚úÖ **Set short expiration** (24 hours)
3. ‚úÖ **One-time use** links
4. ‚úÖ **Rate limit** resend requests
5. ‚úÖ **Validate email format** server-side
6. ‚úÖ **Check for disposable emails** (optional)

### **SMTP Security**

1. ‚úÖ **Store credentials in environment variables**
2. ‚úÖ **Never commit SMTP keys to Git**
3. ‚úÖ **Rotate API keys** quarterly
4. ‚úÖ **Use TLS/SSL** for connections
5. ‚úÖ **Monitor for abuse**

---

## üìö Related Documentation

- [Supabase Email Auth](https://supabase.com/docs/guides/auth/auth-email)
- [Production Signup Guide](./PRODUCTION_SIGNUP_IMPLEMENTATION.md)
- [Environment Setup](./ENVIRONMENT_SETUP.md)
- [Incident Report](./incidents/INCIDENT-2025-01-06-INVALID-API-KEY.md)

---

## üéØ Quick Reference

### **Development**
```bash
‚úÖ Auto-confirm enabled
‚úÖ No email needed
‚úÖ Instant login
```

### **Production**
```bash
‚è∏Ô∏è Email verification required
üìß SMTP must be configured
üîó User clicks confirmation link
```

### **Manual Confirmation**
```powershell
.\scripts\confirm-email.ps1
```

### **Check Email Status**
```sql
SELECT email, email_confirmed_at 
FROM auth.users 
WHERE email = 'user@example.com';
```

---

**Status**: ‚úÖ Configured and Documented  
**Last Updated**: January 6, 2025
